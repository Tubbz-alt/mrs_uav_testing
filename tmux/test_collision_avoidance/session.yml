name: simulation
root: ./
startup_window: gdbs
pre_window: export UAV_NAME=uav1; export RUN_TYPE=simulation; export UAV_TYPE=t650; export WORLD_FILE=./world.yaml
windows:
  - roscore:
      layout: tiled
      panes:
        - roscore
  - gazebo:
      layout: tiled
      panes:
        - waitForRos; roslaunch mrs_simulation simulation.launch gui:=false
  - status:
      layout: tiled
      panes:
        - export UAV_NAME=uav1; waitForSimulation; roslaunch mrs_uav_status status.launch
        - export UAV_NAME=uav2; waitForSimulation; roslaunch mrs_uav_status status.launch
        - export UAV_NAME=uav3; waitForSimulation; roslaunch mrs_uav_status status.launch
  - rviz:
      layout: tiled
      panes:
        - waitForControl; roslaunch mrs_uav_testing rviz.launch name:=avoidance_test
        - waitForControl; roslaunch mrs_uav_testing tf_connector_avoidance.launch
  - spawn:
      layout: tiled
      panes:
        - waitForSimulation; rosrun mrs_simulation spawn 1 --file pos1.txt --$UAV_TYPE --run --delete --enable-rangefinder --enable-ground-truth
        - waitForSimulation; rosrun mrs_simulation spawn 2 --file pos2.txt --$UAV_TYPE --run --delete --enable-rangefinder --enable-ground-truth
        - waitForSimulation; rosrun mrs_simulation spawn 3 --file pos3.txt --$UAV_TYPE --run --delete --enable-rangefinder --enable-ground-truth
  - control:
      layout: tiled
      panes:
        - export UAV_NAME=uav1; waitForOdometry; roslaunch mrs_uav_general core.launch DEBUG:=false
        - export UAV_NAME=uav2; waitForOdometry; roslaunch mrs_uav_general core.launch DEBUG:=false
        - export UAV_NAME=uav3; waitForOdometry; roslaunch mrs_uav_general core.launch DEBUG:=false
  - gdbs:
      layout: tiled
  - autostart:
      layout: tiled
      panes:
        - export UAV_NAME=uav1; waitForSimulation; roslaunch mrs_uav_general automatic_start.launch
        - export UAV_NAME=uav2; waitForSimulation; roslaunch mrs_uav_general automatic_start.launch
        - export UAV_NAME=uav3; waitForSimulation; roslaunch mrs_uav_general automatic_start.launch
  - random_flier:
      layout: tiled
      panes:
        # - export UAV_NAME=uav1; waitForControl; roslaunch mrs_uav_testing random_flier.launch custom_config:=./custom_configs/random_flier.yaml
        # - export UAV_NAME=uav2; waitForControl; roslaunch mrs_uav_testing random_flier.launch custom_config:=./custom_configs/random_flier.yaml
        # - export UAV_NAME=uav3; waitForControl; roslaunch mrs_uav_testing random_flier.launch custom_config:=./custom_configs/random_flier.yaml
        - export UAV_NAME=uav1; waitForControl; roslaunch mrs_uav_testing trajectory_random_flier.launch
        - export UAV_NAME=uav2; waitForControl; roslaunch mrs_uav_testing trajectory_random_flier.launch
        - export UAV_NAME=uav3; waitForControl; roslaunch mrs_uav_testing trajectory_random_flier.launch
  - takeoff:
      layout: tiled
      panes:
        # #{ uav1
        - 'export UAV_NAME=uav1;
          waitForControl;
          rosservice call /$UAV_NAME/mavros/cmd/arming 1;
          rosservice call /$UAV_NAME/mavros/set_mode 0 offboard'
        # #}
        # #{ uav2
        - 'export UAV_NAME=uav2;
          waitForControl;
          rosservice call /$UAV_NAME/mavros/cmd/arming 1;
          rosservice call /$UAV_NAME/mavros/set_mode 0 offboard'
        # #}
        # #{ uav3
        - 'export UAV_NAME=uav3;
          waitForControl;
          rosservice call /$UAV_NAME/mavros/cmd/arming 1;
          rosservice call /$UAV_NAME/mavros/set_mode 0 offboard'
        # #}
  - gazebo_camera_follow:
      layout: tiled
      panes:
        - waitForOdometry; gz camera -c gzclient_camera -f uav1; history -s gz camera -c gzclient_camera -f uav1
