name: simulation
root: ./

pre_window: export UAV_NAME=uav1; export UAV_TYPE=t650; export ODOMETRY_TYPE=gps; export WORLD_NAME=simulation
startup_window: control_test
windows:
  - roscore:
      layout: even-vertical
      panes:
        - roscore
  - gazebo:
      layout: even-vertical
      panes:
        - waitForRos; roslaunch simulation simulation.launch gui:=true
  - rviz:
      layout: even-vertical
      panes:
        - waitForRos; roslaunch mrs_testing rviz_control_test.launch
        - waitForRos; roslaunch mrs_rviz_plugins load_robot.launch
  - spawn:
      layout: even-vertical
      panes:
        - waitForSimulation; spawn 1 --$UAV_TYPE --run --delete --enable-rangefinder --enable-bluefox-camera
  - status:
      layout: even-vertical
      panes:
        - waitForOdometry; roslaunch mrs_status status.launch
  - bumper:
      layout: even-vertical
      panes:
        - waitForOdometry; roslaunch mrs_bumper bumper.launch
  - control:
      layout: even-vertical
      panes:
        - waitForOdometry; roslaunch mrs_general core.launch config_control_manager:=./custom_configs/control_manager.yaml config_uav_manager:=./custom_configs/uav_manager.yaml config_constraint_manager:=./custom_configs/constraint_manager.yaml
  - control_test:
      layout: even-vertical
      panes:
        - waitForControl; roslaunch mrs_testing control_test.launch
  - gazebo_camera_follow:
      layout: even-vertical
      panes:
        - waitForOdometry; gz camera -c gzclient_camera -f uav1; history -s gz camera -c gzclient_camera -f uav1
        - waitForOdometry; ~/.i3/layout_manager.sh layout.json
