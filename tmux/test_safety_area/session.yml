name: simulation
root: ./

pre_window: export UAV_NAME=uav1; export UAV_TYPE=t650; export ODOMETRY_TYPE=gps
startup_window: control
windows:
  - roscore:
      layout: even-vertical
      panes:
        - roscore
  - gazebo:
      layout: even-vertical
      panes:
        - waitForRos; roslaunch mrs_testing safety_area.launch gui:=true
  - rviz:
      layout: even-vertical
      panes:
        - waitForRos; roslaunch mrs_testing rviz_uav1_safety_area.launch
  - spawn:
      layout: even-vertical
      panes:
        - waitForSimulation; spawn --file pos.txt --$UAV_TYPE --run --delete --enable-rangefinder --enable-bluefox-camera
  - status:
      layout: even-vertical
      panes:
        - waitForOdometry; roslaunch mrs_status status.launch
  - bumper:
      layout: even-vertical
      panes:
        - waitForOdometry; roslaunch mrs_bumper bumper.launch
  - rviz_interface:
      layout: even-vertical
      panes:
        - waitForControl; waitForControl; roslaunch mrs_rviz_interface mrs_rviz_interface.launch
  - control:
      layout: even-vertical
      panes:
        - waitForOdometry; roslaunch mrs_general core.launch config_control_manager:=./custom_configs/control_manager.yaml config_uav_manager:=./custom_configs/uav_manager.yaml WORLD_FILE:=./world.yaml
        - waitForOdometry; roslaunch mrs_testing random_flier.launch
        # - waitForOdometry; roslaunch mrs_testing trajectory_random_flier.launch
  - autostart:
      layout: even-vertical
      panes:
        - waitForRos; roslaunch mrs_general automatic_start.launch
  - takeoff:
      layout: even-vertical
      panes:
        #{ uav1
        - 'waitForControl;
          rosservice call /$UAV_NAME/mavros/cmd/arming 1;
          rosservice call /$UAV_NAME/mavros/set_mode 0 offboard'
        #}
  - gazebo_camera_follow:
      layout: even-vertical
      panes:
        - waitForOdometry; gz camera -c gzclient_camera -f uav1; history -s gz camera -c gzclient_camera -f uav1
        - waitForControl; sleep 3; ~/.i3/layout_manager.sh layout.json
