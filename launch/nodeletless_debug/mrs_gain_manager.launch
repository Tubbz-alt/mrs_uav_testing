<launch>

  <arg name="uav_name" default="$(optenv UAV_NAME uav)" />
  <arg name="uav_mass" default="$(optenv UAV_MASS default)" />
  <arg name="profiler" default="$(optenv PROFILER false)" />
  <arg name="standalone" default="true" />
  <arg name="world_file" default="$(find mrs_general)/config/world_simulation.yaml" />
  <arg name="g" default="9.8" />
  <arg name="debug" default="false" />

  <arg unless="$(arg debug)" name="launch_prefix" value=""/>
  <arg     if="$(arg debug)" name="launch_prefix" value="gdb -ex run --args"/>

  <arg unless="$(arg standalone)" name="nodelet" value="load"/>
  <arg     if="$(arg standalone)" name="nodelet" value="standalone"/>
  <arg unless="$(arg standalone)" name="nodelet_manager" value="$(arg uav_name)_nodelet_manager"/>
  <arg     if="$(arg standalone)" name="nodelet_manager" value=""/>

  <group ns="$(arg uav_name)">

    <!-- Gain Manager -->
    <node pkg="nodelet" type="nodelet" name="gain_manager" args="$(arg nodelet) mrs_uav_manager/GainManager $(arg nodelet_manager)" output="screen">

      <rosparam file="$(find mrs_uav_manager)/config/simulation/gain_manager/gain_manager.yaml" />
      <rosparam file="$(find mrs_uav_manager)/config/simulation/gain_manager/gains.yaml" />
      <param name="enable_profiler" type="bool" value="$(arg profiler)" />

      <!-- Subscribers -->
      <remap from="~controller_status_in" to="control_manager/controller_status" />
      <remap from="~odometry_diagnostics_in" to="odometry/diagnostics" />

      <!-- Services -->
      <remap from="~set_gains_in" to="~set_gains" />
      <remap from="~set_gains_out" to="control_manager/so3_controller/set_parameters" />

      <!-- Publishers -->
      <remap from="~current_gains_out" to="~current_gains" />
      <remap from="~profiler" to="profiler" />

    </node>

  </group>

</launch>
