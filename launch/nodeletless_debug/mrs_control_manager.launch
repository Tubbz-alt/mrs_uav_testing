<launch>

  <arg name="uav_name" default="$(optenv UAV_NAME uav)" />
  <arg name="uav_mass" default="$(optenv UAV_MASS default)" />
  <arg name="profiler" default="$(optenv PROFILER false)" />
  <arg name="standalone" default="true" />
  <arg name="world_file" default="$(find mrs_general)/config/world_simulation.yaml" />
  <arg name="g" default="9.8" />
  <arg name="debug" default="false" />

  <arg unless="$(arg debug)" name="launch_prefix" value=""/>
  <arg     if="$(arg debug)" name="launch_prefix" value="gdb -ex run --args"/>

  <arg unless="$(arg standalone)" name="nodelet" value="load"/>
  <arg     if="$(arg standalone)" name="nodelet" value="standalone"/>
  <arg unless="$(arg standalone)" name="nodelet_manager" value="$(arg uav_name)_nodelet_manager"/>
  <arg     if="$(arg standalone)" name="nodelet_manager" value=""/>

  <group ns="$(arg uav_name)">

    <!-- Control manager -->
    <node pkg="nodelet" type="nodelet" name="control_manager" args="$(arg nodelet) mrs_uav_manager/ControlManager $(arg nodelet_manager)" output="screen">

      <rosparam file="$(arg world_file)" />
      <rosparam file="$(find mrs_uav_manager)/config/simulation/control_manager.yaml" />
      <rosparam file="$(find mrs_controllers)/config/simulation/f550/motor_params.yaml" />
      <param name="enable_profiler" type="bool" value="$(arg profiler)" />
      <param name="uav_name" type="string" value="$(arg uav_name)" />

      <!-- Controller's configs -->

      <!-- NSF -->
      <rosparam ns="nsf_controller" file="$(find mrs_controllers)/config/simulation/f550/nsf.yaml" />
      <param name="nsf_controller/g" value="$(arg g)" />
      <param name="nsf_controller/enable_profiler" type="bool" value="$(arg profiler)" />
      <param name="nsf_controller/uav_mass" value="$(arg uav_mass)" />
      <remap from="~nsf_controller/profiler" to="profiler" />

      <!-- SO3 -->
      <rosparam ns="so3_controller" file="$(find mrs_controllers)/config/simulation/f550/so3.yaml" />
      <param name="so3_controller/g" value="$(arg g)" />
      <param name="so3_controller/enable_profiler" type="bool" value="$(arg profiler)" />
      <param name="so3_controller/uav_mass" value="$(arg uav_mass)" />
      <remap from="~so3_controller/profiler" to="profiler" />

      <!-- Attitude controller -->
      <rosparam ns="attitude_controller" file="$(find mrs_controllers)/config/simulation/f550/attitude.yaml" />
      <param name="attitude_controller/g" value="$(arg g)" />
      <param name="attitude_controller/enable_profiler" type="bool" value="$(arg profiler)" />
      <param name="attitude_controller/uav_mass" value="$(arg uav_mass)" />
      <remap from="~attitude_controller/profiler" to="profiler" />

      <!-- FailSafe -->
      <rosparam ns="failsafe_controller" file="$(find mrs_controllers)/config/simulation/f550/failsafe.yaml" />
      <param name="failsafe_controller/g" value="$(arg g)" />
      <param name="failsafe_controller/enable_profiler" type="bool" value="$(arg profiler)" />
      <param name="failsafe_controller/uav_mass" value="$(arg uav_mass)" />
      <remap from="~failsafe_controller/profiler" to="profiler" />

      <!-- Trackers' configs -->

      <!-- LineTracker -->
      <rosparam ns="line_tracker" file="$(find mrs_trackers)/config/simulation/line_tracker.yaml" />
      <param name="line_tracker/enable_profiler" type="bool" value="$(arg profiler)" />
      <remap from="~line_tracker/profiler" to="profiler" />

      <!-- JoyTracker -->
      <rosparam ns="joy_tracker" file="$(find mrs_trackers)/config/simulation/joy_tracker.yaml" />
      <param name="joy_tracker/enable_profiler" type="bool" value="$(arg profiler)" />
      <remap from="~joy_tracker/profiler" to="profiler" />
      <remap from="~joy_tracker/joystick_in" to="/joy" />

      <!-- LandoffTracker -->
      <rosparam ns="landoff_tracker" file="$(find mrs_trackers)/config/simulation/landoff_tracker.yaml" />
      <param name="landoff_tracker/enable_profiler" type="bool" value="$(arg profiler)" />
      <remap from="~landoff_tracker/profiler" to="profiler" />
      <remap from="~landoff_tracker/reset_lateral_odometry_out" to="odometry/reset_lateral_kalman" />

      <!-- MpcTracker -->
      <rosparam ns="mpc_tracker" file="$(find mrs_trackers)/config/simulation/mpc_tracker.yaml" />
      <param name="mpc_tracker/enable_profiler" type="bool" value="$(arg profiler)" />
      <param name="mpc_tracker/uav_name" value="$(arg uav_name)" />
      <param name="mpc_tracker/predicted_trajectory_topic" value="control_manager/mpc_tracker/predicted_trajectory" />
      <param name="mpc_tracker/predicted_trajectory_esp_topic" value="control_manager/mpc_tracker/predicted_trajectory_esp" />
      <remap from="~mpc_tracker/profiler" to="profiler" />
      <remap from="~mpc_tracker/rc_in" to="mavros/rc/in" />
      <remap from="~mpc_tracker/set_trajectory_in" to="~mpc_tracker/set_trajectory" />
      <remap from="~mpc_tracker/start_trajectory_following_in" to="~mpc_tracker/start_trajectory_following" />
      <remap from="~mpc_tracker/stop_trajectory_following_in" to="~mpc_tracker/stop_trajectory_following" />
      <remap from="~mpc_tracker/resume_trajectory_following_in" to="~mpc_tracker/resume_trajectory_following" />
      <remap from="~mpc_tracker/fly_to_trajectory_start_in" to="~mpc_tracker/fly_to_trajectory_start" />
      <remap from="~mpc_tracker/failsafe_in" to="~mpc_tracker/failsafe" />
      <remap from="~mpc_tracker/set_mpc_matrix_in" to="~mpc_tracker/set_Q" />
      <remap from="~mpc_tracker/diagnostics_out" to="~mpc_tracker/diagnostics" />
      <remap from="~mpc_tracker/cmd_acceleration_out" to="~mpc_tracker/cmd_acceleration" />
      <remap from="~mpc_tracker/setpoint_odom_out" to="~mpc_tracker/setpoint_odom" />
      <remap from="~mpc_tracker/debug_set_trajectory_out" to="~mpc_tracker/debug_set_trajectory" />
      <remap from="~mpc_tracker/headless_in" to="~mpc_tracker/headless" />

      <!-- Subscribers -->
      <remap from="~odometry_in" to="odometry/odom_main" />
      <remap from="~max_height_in" to="odometry/max_altitude" />
      <remap from="~joystick_in" to="/joy" />

      <!-- Subscribers and Services -->
      <remap from="~goto_in" to="~goto" />
      <remap from="~goto_fcu_in" to="~goto_fcu" />
      <remap from="~goto_relative_in" to="~goto_relative" />
      <remap from="~goto_altitude_in" to="~goto_altitude" />
      <remap from="~set_yaw_in" to="~set_yaw" />
      <remap from="~set_yaw_relative_in" to="~set_yaw_relative" />

      <!-- Publishers -->
      <remap from="~control_output_out" to="mavros/setpoint_raw/attitude" />
      <remap from="~tracker_status_out" to="~tracker_status" />
      <remap from="~controller_status_out" to="~controller_status" />
      <remap from="~cmd_odom_out" to="~cmd_odom" />
      <remap from="~position_cmd_out" to="~position_cmd" />
      <remap from="~attitude_cmd_out" to="~attitude_cmd" />
      <remap from="~target_attitude_out" to="mavros/setpoint_raw/target_attitude" />
      <remap from="~profiler" to="profiler" />

      <!-- Services -->
      <remap from="~switch_tracker_in" to="~switch_tracker" />
      <remap from="~switch_controller_in" to="~switch_controller" />
      <remap from="~hover_in" to="~hover" />
      <remap from="~ehover_in" to="~ehover" />
      <remap from="~motors_in" to="~motors" />
      <remap from="~emergency_goto_in" to="~emergency_goto" />
      <remap from="~enable_callbacks_in" to="~enable_callbacks" />
      <remap from="~set_gains_out" to="gain_manager/set_gains" />
      <remap from="~set_constraints_in" to="control_manager/set_constraints" />
      <remap from="~use_joystick_in" to="control_manager/use_joystick" />

    </node>

  </group>

</launch>
